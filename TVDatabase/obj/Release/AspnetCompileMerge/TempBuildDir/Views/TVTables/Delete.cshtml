@model TVDatabase.Models.TVTable

@{
    ViewBag.Title = "Delete";
}

<div id="topperCRUD">
    <span id="browseTitle">
        Delete @Model.ShowName?
    </span>
    <h3>Are you sure you want to delete @Model.ShowName from TV Base?</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <span class="col-xs-3">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
        </span>
        <span class="col-xs-3">
            @Html.ActionLink("Back to Show", "Details", new { id = Model.ID }, new { @class = "btn btn-warning" })
        </span>

        @*<div class="form-group col-xs-6">
                @Html.LabelFor(model => model.SecretPassword, htmlAttributes: new { @class = "control-label" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>*@

        <span class="form-actions no-color col-xs-3">
            <input type="submit" value="Delete" class="btn btn-danger" />
        </span>
        <br />
    }
</div>
<div>
    <hr />
    <dl class="dl-horizontal col-xs-8" id="details">
        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateFrom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateFrom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTo)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NumberOfSeasons)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NumberOfSeasons)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrentlyRunning)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrentlyRunning)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Actors)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Actors)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PeakViewers)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PeakViewers)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Network)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Network)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Rating)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Rating)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Views)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Views)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Likes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Likes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dislikes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dislikes)
        </dd>

    </dl>
    @if (string.IsNullOrEmpty(Model.Image))
    {
        <img src="~/Images/tv.png" id="detailsPic" class="col-xs-4">
    }
    else
    {
        <img src="@Url.Content(Model.Image)" id="detailsPic" class="col-xs-4">
    }
</div>
