@model TVDatabase.Models.TVTable

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <span class="col-xs-3">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
        </span>
        <span class="col-xs-3">
            @Html.ActionLink("Back to Show", "Details", new { id = Model.ID }, new { @class = "btn btn-warning" })
        </span>
        <span class="col-xs-3">
            <input type="submit" value="Save" class="btn btn-success" />
        </span>
        <span class="col-xs-3">
            @Html.ActionLink("Delete Show", "Delete", new { id = Model.ID }, new { @class = "btn btn-danger" })
        </span>

        @Html.ValidationSummary(true, "Some required fields haven't been filled in.", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.ShowName, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ShowName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShowName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DateFrom, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.DateTo, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.NumberOfSeasons, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NumberOfSeasons, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.CurrentlyRunning, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CurrentlyRunning, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>

        <div class="form-group col-xs-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Actors, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.PeakViewers, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PeakViewers, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Network, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Network, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group col-xs-6">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

    </div>
}

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
